import { SessionNotFoundError } from '../../errors.mjs';
import { storefrontClientFactory } from '../../clients/storefront/factory.mjs';
import { getOfflineSession } from '../helpers/get-offline-session.mjs';

function unauthenticatedStorefrontContextFactory(params) {
    return async (shop) => {
        const session = await getOfflineSession(shop, params);
        if (!session) {
            throw new SessionNotFoundError(`Could not find a session for shop ${shop} when creating unauthenticated storefront context`);
        }
        return {
            session,
            storefront: storefrontClientFactory({ params, session }),
        };
    };
}

export { unauthenticatedStorefrontContextFactory };
//# sourceMappingURL=factory.mjs.map
