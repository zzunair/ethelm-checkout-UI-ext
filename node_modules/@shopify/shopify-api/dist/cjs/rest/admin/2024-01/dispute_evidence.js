'use strict';

var base = require('../../base.js');
var types = require('../../../lib/types.js');
var fulfillment = require('./fulfillment.js');

/***********************************************************************************************************************
* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *
***********************************************************************************************************************/
class DisputeEvidence extends base.Base {
    static async find({ session, dispute_id }) {
        const result = await this.baseFind({
            session: session,
            requireIds: true,
            urlIds: { "dispute_id": dispute_id },
            params: {},
        });
        return result.data ? result.data[0] : null;
    }
}
DisputeEvidence.apiVersion = types.ApiVersion.January24;
DisputeEvidence.hasOne = {};
DisputeEvidence.hasMany = {
    "fulfillments": fulfillment.Fulfillment
};
DisputeEvidence.paths = [
    { "http_method": "get", "operation": "get", "ids": ["dispute_id"], "path": "shopify_payments/disputes/<dispute_id>/dispute_evidences.json" },
    { "http_method": "put", "operation": "put", "ids": ["dispute_id"], "path": "shopify_payments/disputes/<dispute_id>/dispute_evidences.json" }
];
DisputeEvidence.primaryKey = "dispute_id";
DisputeEvidence.resourceNames = [
    {
        "singular": "dispute_evidence",
        "plural": "dispute_evidences"
    }
];

exports.DisputeEvidence = DisputeEvidence;
//# sourceMappingURL=dispute_evidence.js.map
