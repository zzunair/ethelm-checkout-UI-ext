'use strict';

var base = require('../../base.js');
var types = require('../../../lib/types.js');
var image = require('./image.js');

/***********************************************************************************************************************
* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *
***********************************************************************************************************************/
class Collection extends base.Base {
    static async find({ session, id, fields = null }) {
        const result = await this.baseFind({
            session: session,
            requireIds: true,
            urlIds: { "id": id },
            params: { "fields": fields },
        });
        return result.data ? result.data[0] : null;
    }
    static async products({ session, id, limit = null, ...otherArgs }) {
        const response = await this.request({
            http_method: "get",
            operation: "products",
            session: session,
            urlIds: { "id": id },
            params: { "limit": limit, ...otherArgs },
            body: {},
            entity: null,
        });
        return response ? response.body : null;
    }
}
Collection.apiVersion = types.ApiVersion.January23;
Collection.hasOne = {
    "image": image.Image
};
Collection.hasMany = {};
Collection.paths = [
    { "http_method": "get", "operation": "get", "ids": ["id"], "path": "collections/<id>.json" },
    { "http_method": "get", "operation": "products", "ids": ["id"], "path": "collections/<id>/products.json" }
];
Collection.resourceNames = [
    {
        "singular": "collection",
        "plural": "collections"
    }
];

exports.Collection = Collection;
//# sourceMappingURL=collection.js.map
