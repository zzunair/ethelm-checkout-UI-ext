import * as _graphql_codegen_plugin_helpers from '@graphql-codegen/plugin-helpers';
import { Types } from '@graphql-codegen/plugin-helpers';
export { pluckConfig } from '@shopify/graphql-codegen';

declare enum ApiType {
    Admin = "Admin",
    Storefront = "Storefront"
}
interface ShopifyApiPresetConfig {
    apiType: ApiType;
    module?: string;
}
interface ShopifyApiProjectOptions {
    apiType: ApiType;
    apiVersion?: string;
    outputDir?: string;
    documents?: string[];
    module?: string;
}
type ShopifyApiTypesOptions = ShopifyApiProjectOptions;

declare const preset: Types.OutputPreset<ShopifyApiPresetConfig>;

declare const shopifyApiTypes: ({ apiType, apiVersion, outputDir, documents, module, }: ShopifyApiTypesOptions) => {
    [x: string]: {
        schema: string;
        plugins: string[];
        config: {
            minify: boolean;
        };
        preset?: undefined;
        documents?: undefined;
        presetConfig?: undefined;
    } | {
        schema: string;
        plugins: string[];
        config?: undefined;
        preset?: undefined;
        documents?: undefined;
        presetConfig?: undefined;
    } | {
        schema: string;
        preset: _graphql_codegen_plugin_helpers.Types.OutputPreset<ShopifyApiPresetConfig>;
        documents: string[];
        presetConfig: {
            apiType: ApiType;
            module: string | undefined;
        };
        plugins?: undefined;
        config?: undefined;
    };
};

declare const shopifyApiProject: ({ apiType, apiVersion, outputDir, documents, module, }: ShopifyApiProjectOptions) => {
    schema: string;
    documents: string[];
    extensions: {
        codegen: {
            pluckConfig: {
                isGqlTemplateLiteral: (node: any, options: any) => boolean;
                pluckStringFromFile: (code: string, { start, end, leadingComments }: any) => string;
            };
            generates: {
                [x: string]: {
                    schema: string;
                    plugins: string[];
                    config: {
                        minify: boolean;
                    };
                    preset?: undefined;
                    documents?: undefined;
                    presetConfig?: undefined;
                } | {
                    schema: string;
                    plugins: string[];
                    config?: undefined;
                    preset?: undefined;
                    documents?: undefined;
                    presetConfig?: undefined;
                } | {
                    schema: string;
                    preset: _graphql_codegen_plugin_helpers.Types.OutputPreset<ShopifyApiPresetConfig>;
                    documents: string[];
                    presetConfig: {
                        apiType: ApiType;
                        module: string | undefined;
                    };
                    plugins?: undefined;
                    config?: undefined;
                };
            };
        };
    };
};

export { ApiType, type ShopifyApiPresetConfig, type ShopifyApiProjectOptions, type ShopifyApiTypesOptions, preset, shopifyApiProject, shopifyApiTypes };
